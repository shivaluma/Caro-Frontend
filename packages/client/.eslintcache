[{"/Users/shiro/Desktop/monorepo/packages/client/src/index.js":"1","/Users/shiro/Desktop/monorepo/packages/client/src/store/index.js":"2","/Users/shiro/Desktop/monorepo/packages/client/src/components/app/index.js":"3","/Users/shiro/Desktop/monorepo/packages/client/src/store/configureStore.js":"4","/Users/shiro/Desktop/monorepo/packages/client/src/components/app/App.js":"5","/Users/shiro/Desktop/monorepo/packages/client/src/store/rootReducer.js":"6","/Users/shiro/Desktop/monorepo/packages/client/src/slices/user.js":"7","/Users/shiro/Desktop/monorepo/packages/client/src/slices/online.js":"8","/Users/shiro/Desktop/monorepo/packages/client/src/components/Loading.jsx":"9","/Users/shiro/Desktop/monorepo/packages/client/src/components/ProtectedRoute.jsx":"10","/Users/shiro/Desktop/monorepo/packages/client/src/configs/socket.js":"11","/Users/shiro/Desktop/monorepo/packages/client/src/slices/init.js":"12","/Users/shiro/Desktop/monorepo/packages/client/src/pages/index.js":"13","/Users/shiro/Desktop/monorepo/packages/client/src/slices/index.js":"14","/Users/shiro/Desktop/monorepo/packages/client/src/slices/profile.js":"15","/Users/shiro/Desktop/monorepo/packages/client/src/slices/loading.js":"16","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/index.js":"17","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/index.js":"18","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Profile/index.js":"19","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/index.js":"20","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/Main.js":"21","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/Room.js":"22","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Profile/Profile.js":"23","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/Auth.jsx":"24","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/RegisterForm.jsx":"25","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/LoginForm.jsx":"26","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/index.js":"27","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/index.js":"28","/Users/shiro/Desktop/monorepo/packages/client/src/components/Logo.jsx":"29","/Users/shiro/Desktop/monorepo/packages/client/src/hooks/index.js":"30","/Users/shiro/Desktop/monorepo/packages/client/src/services/index.js":"31","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/WatchList.js":"32","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/UserPlay.js":"33","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Chat.js":"34","/Users/shiro/Desktop/monorepo/packages/client/src/services/user.js":"35","/Users/shiro/Desktop/monorepo/packages/client/src/services/room.js":"36","/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useLayout.js":"37","/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useDebounce.js":"38","/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useLoading.js":"39","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Board.js":"40","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/GameButton.js":"41","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/AddButton.js":"42","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Square.js":"43","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/index.js":"44","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/index.js":"45","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/Layout.jsx":"46","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/Header.jsx":"47","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/index.js":"48","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/Header/UserMenu.jsx":"49","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/index.js":"50","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/UpdateProfileModal.jsx":"51","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/components/index.js":"52","/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/components/ ProfileForm.jsx":"53","/Users/shiro/Desktop/monorepo/packages/client/src/slices/errors.js":"54","/Users/shiro/Desktop/monorepo/packages/client/src/utils/calculateWin.js":"55","/Users/shiro/Desktop/monorepo/packages/client/src/pages/ForgotPassword/index.js":"56","/Users/shiro/Desktop/monorepo/packages/client/src/pages/ForgotPassword/ForgotPassword.jsx":"57","/Users/shiro/Desktop/monorepo/packages/client/src/services/token.js":"58","/Users/shiro/Desktop/monorepo/packages/client/src/pages/ActiveAccount/index.js":"59","/Users/shiro/Desktop/monorepo/packages/client/src/pages/ActiveAccount/ActiveAccount.jsx":"60"},{"size":253,"mtime":1607444140242,"results":"61","hashOfConfig":"62"},{"size":53,"mtime":1607435112884,"results":"63","hashOfConfig":"62"},{"size":40,"mtime":1607429774687,"results":"64","hashOfConfig":"62"},{"size":446,"mtime":1608132402862,"results":"65","hashOfConfig":"62"},{"size":2235,"mtime":1610269056399,"results":"66","hashOfConfig":"62"},{"size":416,"mtime":1608188181432,"results":"67","hashOfConfig":"62"},{"size":3370,"mtime":1610269204669,"results":"68","hashOfConfig":"62"},{"size":1045,"mtime":1610267640530,"results":"69","hashOfConfig":"62"},{"size":303,"mtime":1607443660437,"results":"70","hashOfConfig":"62"},{"size":744,"mtime":1608132529568,"results":"71","hashOfConfig":"62"},{"size":227,"mtime":1610268634638,"results":"72","hashOfConfig":"62"},{"size":520,"mtime":1608132402862,"results":"73","hashOfConfig":"62"},{"size":296,"mtime":1610180266023,"results":"74","hashOfConfig":"62"},{"size":301,"mtime":1608187960680,"results":"75","hashOfConfig":"62"},{"size":624,"mtime":1608132402862,"results":"76","hashOfConfig":"62"},{"size":527,"mtime":1608132402862,"results":"77","hashOfConfig":"62"},{"size":34,"mtime":1607514850371,"results":"78","hashOfConfig":"62"},{"size":34,"mtime":1608008397436,"results":"79","hashOfConfig":"62"},{"size":37,"mtime":1608121979769,"results":"80","hashOfConfig":"62"},{"size":34,"mtime":1607437111372,"results":"81","hashOfConfig":"62"},{"size":8415,"mtime":1610267833881,"results":"82","hashOfConfig":"62"},{"size":23656,"mtime":1610286668083,"results":"83","hashOfConfig":"62"},{"size":3658,"mtime":1610249875532,"results":"84","hashOfConfig":"62"},{"size":4884,"mtime":1608132024055,"results":"85","hashOfConfig":"62"},{"size":5573,"mtime":1610187560624,"results":"86","hashOfConfig":"62"},{"size":3164,"mtime":1610083565393,"results":"87","hashOfConfig":"62"},{"size":106,"mtime":1607835021703,"results":"88","hashOfConfig":"62"},{"size":188,"mtime":1608027469311,"results":"89","hashOfConfig":"62"},{"size":855,"mtime":1609766079199,"results":"90","hashOfConfig":"62"},{"size":162,"mtime":1607437455483,"results":"91","hashOfConfig":"62"},{"size":119,"mtime":1610169553986,"results":"92","hashOfConfig":"62"},{"size":116,"mtime":1608027469311,"results":"93","hashOfConfig":"62"},{"size":2397,"mtime":1610280746599,"results":"94","hashOfConfig":"62"},{"size":1636,"mtime":1610195040227,"results":"95","hashOfConfig":"62"},{"size":925,"mtime":1610187668759,"results":"96","hashOfConfig":"62"},{"size":473,"mtime":1610254110224,"results":"97","hashOfConfig":"62"},{"size":343,"mtime":1607437391104,"results":"98","hashOfConfig":"62"},{"size":362,"mtime":1607437469375,"results":"99","hashOfConfig":"62"},{"size":392,"mtime":1607437788011,"results":"100","hashOfConfig":"62"},{"size":701,"mtime":1609838374384,"results":"101","hashOfConfig":"62"},{"size":1652,"mtime":1610257267500,"results":"102","hashOfConfig":"62"},{"size":313,"mtime":1608132402862,"results":"103","hashOfConfig":"62"},{"size":502,"mtime":1609766079200,"results":"104","hashOfConfig":"62"},{"size":54,"mtime":1607436365352,"results":"105","hashOfConfig":"62"},{"size":36,"mtime":1607436362209,"results":"106","hashOfConfig":"62"},{"size":489,"mtime":1608124371786,"results":"107","hashOfConfig":"62"},{"size":1675,"mtime":1610260892440,"results":"108","hashOfConfig":"62"},{"size":70,"mtime":1607514850370,"results":"109","hashOfConfig":"62"},{"size":1091,"mtime":1607529764340,"results":"110","hashOfConfig":"62"},{"size":48,"mtime":1607514850370,"results":"111","hashOfConfig":"62"},{"size":710,"mtime":1607514850369,"results":"112","hashOfConfig":"62"},{"size":57,"mtime":1607436605165,"results":"113","hashOfConfig":"62"},{"size":2534,"mtime":1608132023963,"results":"114","hashOfConfig":"62"},{"size":498,"mtime":1608189586566,"results":"115","hashOfConfig":"62"},{"size":1680,"mtime":1609941615858,"results":"116","hashOfConfig":"62"},{"size":44,"mtime":1610082779714,"results":"117","hashOfConfig":"62"},{"size":9775,"mtime":1610175737250,"results":"118","hashOfConfig":"62"},{"size":196,"mtime":1610169546314,"results":"119","hashOfConfig":"62"},{"size":43,"mtime":1610180278773,"results":"120","hashOfConfig":"62"},{"size":3264,"mtime":1610186251930,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"fjwlth",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"124"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"124"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"/Users/shiro/Desktop/monorepo/packages/client/src/index.js",[],["247","248","249","250","251"],"/Users/shiro/Desktop/monorepo/packages/client/src/store/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/components/app/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/store/configureStore.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/components/app/App.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/store/rootReducer.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/user.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/online.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/components/Loading.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/components/ProtectedRoute.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/configs/socket.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/init.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/profile.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/loading.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Profile/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/Main.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/Room.js",["252","253","254","255","256"],"/* eslint-disable no-constant-condition */\n/* eslint-disable no-nested-ternary */\n/* eslint-disable react/display-name */\nimport { useMemo, useState, useEffect, useCallback, useRef } from 'react';\nimport { useLayout } from 'hooks';\nimport { Spin } from 'antd';\nimport { RoomService } from 'services';\nimport { AiOutlineFlag } from 'react-icons/ai';\nimport { FaHandshake } from 'react-icons/fa';\nimport { useSelector, useDispatch } from 'react-redux';\nimport socket from 'configs/socket';\nimport { Modal, Tabs } from 'antd';\nimport calculateWin from 'utils/calculateWin';\nimport { Select, Input } from 'antd';\nimport { useForm } from 'react-hook-form';\nimport { changeRoom } from 'slices/user';\nimport { postCheckPassword } from 'services/room';\nimport { Chat, UserPlay, Board } from './components';\n\nconst { Option } = Select;\n\nconst { TabPane } = Tabs;\nconst Room = ({ match, history }) => {\n  const dispatch = useDispatch();\n\n  // eslint-disable-next-line no-unused-vars\n  const messageRef = useRef(null);\n  const [room, setRoom] = useState(null);\n  const [chat, setChat] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [gameData, setGameData] = useState({\n    board: new Array(20).fill(new Array(20).fill(null)),\n    next: true,\n    pos: null,\n    userTurn: null,\n    lastTick: null,\n    started: false\n  });\n\n  const [initStatus, setInitStatus] = useState({\n    init: false,\n    requirepass: false,\n    join: false\n  });\n\n  const [countdown, setCountdown] = useState(null);\n  const [userAccepter, setUserAccepter] = useState({ firstPlayer: false, secondPlayer: false });\n\n  const user = useSelector((state) => state.user);\n  const onlines = useSelector((state) => state.online);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [currentTab, setCurrentTab] = useState('1');\n\n  const [clockToggle, setClockToggle] = useState(false);\n  const handleOk = () => {\n    // const roomIdNum = Number(match.params.id);\n    // socket.emit('game-end', {\n    //   board: gameData.board,\n    //   roomId: roomIdNum,\n    //   next: gameData.next,\n    //   lastTick: null,\n    //   win: user\n    // });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onUserJoinRoom = useCallback((user) => {\n    setRoom((prev) => ({\n      ...prev,\n      people: [...prev.people, user]\n    }));\n  }, []);\n\n  const handleLeaveRoomClick = useCallback(() => {\n    dispatch(changeRoom(null));\n    socket.emit('user-leave-room', { roomId: Number(match.params.id), user });\n    socket.emit('change-side', { roomId: match.params.id, user, side: null });\n    history.push('/');\n  }, [history, user, match.params.id, dispatch]);\n\n  useEffect(() => {\n    if (initStatus.join) return;\n    if (room && user) {\n      if (!room.password || room.people.findIndex((u) => u._id === user._id) !== -1) {\n        setInitStatus(() => ({\n          init: true,\n          requirepass: false,\n          join: true\n        }));\n\n        return;\n      }\n      if (room.password && room.people.findIndex((u) => u._id === user._id) === -1) {\n        setInitStatus(() => ({\n          init: true,\n          requirepass: true\n        }));\n      }\n    }\n  }, [room, user, initStatus.join]);\n\n  const Layout = useMemo(\n    () =>\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useLayout({\n        left: () => (\n          <div key=\"leftHeader\" className=\"ml-2 text-xl font-medium text-gray-800\">\n            {match.params.id !== null && `Room #${match.params.id}`}\n          </div>\n        ),\n        right: () => (\n          <button\n            type=\"button\"\n            key=\"right\"\n            onClick={handleLeaveRoomClick}\n            className=\"px-3 py-2 mr-2 font-semibold border-2 rounded-full text-main border-main\">\n            Leave Room\n          </button>\n        )\n      }),\n    [match.params.id, handleLeaveRoomClick]\n  );\n\n  const onUserLeaveRoom = useCallback((user) => {\n    setRoom((prev) => ({\n      ...prev,\n      people: prev.people.filter((p) => p._id !== user._id)\n    }));\n  }, []);\n\n  const hasRunRef = useRef(false);\n  useEffect(() => {\n    if (!initStatus.init) return;\n    if (hasRunRef.current) return;\n    hasRunRef.current = true;\n    socket.on('player-change-side', ({ user, side, leaveSide, userTurn }) => {\n      if (side === 1) {\n        setRoom((prev) => ({ ...prev, firstPlayer: user }));\n      } else if (side === 2) {\n        setRoom((prev) => ({ ...prev, secondPlayer: user }));\n      }\n\n      if (leaveSide === 1) {\n        setRoom((prev) => ({ ...prev, firstPlayer: null }));\n      } else if (leaveSide === 2) {\n        setRoom((prev) => ({ ...prev, secondPlayer: null }));\n      }\n      setGameData((prev) => ({\n        ...prev,\n        userTurn\n      }));\n    });\n    socket.on('room-changed', ({ board, next, user, lastTick }) => {\n      setGameData((prev) => ({\n        ...prev,\n        board,\n        next: !next,\n        userTurn: user,\n        lastTick\n      }));\n      console.log('Room changed');\n      setCountdown(() => 30);\n    });\n\n    socket.on('press-start', ({ pos }) => {\n      if (pos === 1) {\n        setUserAccepter((prev) => ({ ...prev, firstPlayer: true }));\n      } else {\n        setUserAccepter((prev) => ({ ...prev, secondPlayer: true }));\n      }\n\n      setCountdown(() => 10);\n\n      setClockToggle(() => true);\n    });\n\n    socket.on('game-ended', ({ board, next, lastTick }) => {\n      setGameData((prev) => ({\n        ...prev,\n        board,\n        next,\n        started: false,\n        userTurn: null,\n        lastTick\n      }));\n      setWinner(lastTick === 'O' ? 'Player 1' : 'Player 2');\n      setCountdown(() => room?.time);\n      setClockToggle(() => false);\n      setUserAccepter(() => ({\n        firstPlayer: false,\n        secondPlayer: false\n      }));\n    });\n\n    socket.on('claim-draw-cli', ({ test }) => {\n      console.log(test);\n      setIsModalVisible(true);\n    });\n\n    socket.on('new-chat-message', (message) => {\n      setChat((prev) => [...prev, message]);\n      if (!messageRef.current) return;\n      messageRef.current.scrollIntoView({ behavior: 'smooth' });\n    });\n\n    socket.on('user-join-room', (user) => {\n      setChat((prev) => [\n        ...prev,\n        { sender: 'Admin', content: `New user has joined the room : ${user.email}` }\n      ]);\n\n      onUserJoinRoom(user);\n      if (!messageRef.current) return;\n      messageRef.current.scrollIntoView({ behavior: 'smooth' });\n    });\n\n    socket.on('user-leave-room', (user) => {\n      setChat((prev) => [\n        ...prev,\n        { sender: 'Admin', content: `A user has leaved the room : ${user.email}` }\n      ]);\n      onUserLeaveRoom(user);\n      if (!messageRef.current) return;\n      messageRef.current.scrollIntoView({ behavior: 'smooth' });\n    });\n  }, [initStatus.init, onUserJoinRoom, onUserLeaveRoom, room?.time]);\n\n  useEffect(() => {\n    const roomIdNum = Number(match.params.id);\n    if (!Number.isInteger(roomIdNum) || roomIdNum < 0 || roomIdNum >= 20) {\n      return;\n    }\n    (async () => {\n      const room = await RoomService.getRoomById(roomIdNum, 'public');\n      if (!room.data) {\n        history.replace('/');\n      }\n      setRoom(() => {\n        if (room.data.people.findIndex((u) => u._id === user._id) === -1) {\n          return { ...room.data, people: [user, ...room.data.people] };\n        }\n        return room.data;\n      });\n\n      const initChat =\n        room?.data?.owner?._id === user._id\n          ? [\n              {\n                sender: 'Admin',\n                content: 'Your are the owner of this room, you can change the game settings.',\n                createdAt: new Date()\n              }\n            ]\n          : [];\n\n      setChat(room?.data?.chats.length > 0 ? room?.data?.chats : [...initChat]);\n\n      const next = room?.data?.next != null ? !room.data.next : true;\n\n      setGameData((prev) => ({\n        ...prev,\n        board: room?.data?.board || new Array(20).fill(new Array(20).fill(null)),\n        next,\n        userTurn: !next ? room?.data?.firstPlayer : room?.data?.secondPlayer,\n        lastTick: room?.data?.lastTick || null,\n        started: room?.data?.started || false\n      }));\n\n      setUserAccepter(() => ({\n        firstPlayer: room?.data?.ready?.firstPlayer || false,\n        secondPlayer: room?.data?.ready?.secondPlayer || false\n      }));\n    })();\n    // eslint-disable-next-line\n  }, [match.params.id]);\n\n  useEffect(() => {\n    if (initStatus.join) {\n      const roomIdNum = Number(match.params.id);\n\n      socket.emit('join-room', { roomId: roomIdNum, user });\n    }\n  }, [initStatus.join, user, match.params.id, dispatch]);\n\n  useEffect(() => {\n    if (initStatus.join) {\n      const roomIdNum = Number(match.params.id);\n      dispatch(changeRoom(roomIdNum));\n    }\n  }, [initStatus.join, match.params.id, dispatch, user.room]);\n\n  useEffect(() => {\n    if (room && user) {\n      setGameData((prev) => ({\n        ...prev,\n        pos:\n          room?.firstPlayer?._id === user._id ? 1 : room?.secondPlayer?._id === user._id ? 2 : null\n      }));\n    }\n  }, [room, user]);\n\n  useEffect(() => {\n    if (gameData.started) return;\n    if (countdown === 0 && !(userAccepter.firstPlayer && userAccepter.secondPlayer)) {\n      setClockToggle(() => false);\n      if (!room?.firstPlayer?._id || !room?.secondPlayer?._id) return;\n\n      if (!userAccepter.firstPlayer && room?.firstPlayer._id === user._id) {\n        setRoom((prev) => ({ ...prev, firstPlayer: null }));\n        setGameData((prev) => ({\n          ...prev,\n          pos: null\n        }));\n        socket.emit('change-side', { roomId: match.params.id, user, side: null });\n      } else if (!userAccepter.secondPlayer && room?.secondPlayer._id === user._id) {\n        setRoom((prev) => ({ ...prev, secondPlayer: null }));\n        setGameData((prev) => ({\n          ...prev,\n          pos: null\n        }));\n        socket.emit('change-side', { roomId: match.params.id, user, side: null });\n      }\n      setCountdown(() => room?.time);\n      setUserAccepter(() => ({\n        firstPlayer: false,\n        secondPlayer: false\n      }));\n    }\n  }, [\n    countdown,\n    userAccepter.firstPlayer,\n    userAccepter.secondPlayer,\n    gameData.started,\n    room?.firstPlayer,\n    room?.secondPlayer,\n    room?.time,\n    match.params.id,\n    user\n  ]);\n\n  useEffect(() => {\n    if (userAccepter.firstPlayer && userAccepter.secondPlayer) {\n      setCountdown(() => room?.time);\n      console.log('SET BY ROOM TIME');\n      setGameData((prev) => ({\n        ...prev,\n        started: true\n      }));\n    }\n  }, [userAccepter, room?.time]);\n\n  useEffect(() => {\n    console.log(gameData.started);\n    if (gameData.started) {\n      if (countdown === 0) {\n        const roomIdNum = Number(match.params.id);\n        socket.emit('game-end', {\n          board: gameData.board,\n          roomId: roomIdNum,\n          next: gameData.next,\n          lastTick: [3, 3]\n        });\n        setUserAccepter(() => ({\n          firstPlayer: false,\n          secondPlayer: false\n        }));\n        setGameData((prev) => ({\n          ...prev,\n          started: false\n        }));\n        setClockToggle(() => false);\n        setCountdown(() => room?.time);\n      }\n    }\n  }, [gameData.started, countdown, gameData.board, gameData.next, match.params.id, room?.time]);\n\n  // const limitInterval = useRef(false);\n  useEffect(() => {\n    let interval;\n    if (clockToggle) {\n      interval = setInterval(() => {\n        setCountdown((prev) => {\n          console.log(prev);\n          if (prev === 1) {\n            clearInterval(interval);\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [clockToggle]);\n\n  const handleSendMessage = useCallback(\n    (content) => {\n      socket.emit('user-send-message', { roomId: match.params.id, user: user.email, content });\n    },\n    [match.params.id, user.email]\n  );\n\n  const handleOnUserPickPosition = useCallback(\n    (newPos) => {\n      if (!match.params.id) return;\n      setCountdown(() => room?.time);\n      if (newPos === 1) {\n        setRoom((prev) => ({ ...prev, firstPlayer: user }));\n        setGameData((prev) => ({\n          ...prev,\n          pos: 1\n        }));\n        socket.emit('change-side', { roomId: match.params.id, user, side: 1 });\n      } else if (newPos === 2) {\n        setRoom((prev) => ({ ...prev, secondPlayer: user }));\n        setGameData((prev) => ({\n          ...prev,\n          pos: 2\n        }));\n        socket.emit('change-side', { roomId: match.params.id, user, side: 2 });\n      } else {\n        if (gameData.pos === 1) {\n          setRoom((prev) => ({ ...prev, firstPlayer: null }));\n        } else if (gameData.pos === 2) {\n          setRoom((prev) => ({ ...prev, secondPlayer: null }));\n        }\n        setGameData((prev) => ({\n          ...prev,\n          pos: null\n        }));\n        socket.emit('change-side', { roomId: match.params.id, user, side: null });\n      }\n    },\n    [user, match.params.id, gameData.pos, room?.time]\n  );\n\n  const handleTick = async (i, j) => {\n    if (gameData.userTurn)\n      if (user._id === gameData.userTurn._id) {\n        const roomIdNum = Number(match.params.id);\n        const newBoard = gameData.board.map((row, indexX) => {\n          if (indexX === i)\n            return row.map((column, indexY) => {\n              if (indexY === j) return gameData.next ? 'X' : 'O';\n              return column;\n            });\n          return row;\n        });\n\n        setGameData((prev) => ({\n          ...prev,\n          board: newBoard,\n\n          lastTick: [i, j]\n        }));\n\n        if (await calculateWin(i, j, newBoard[i][j], newBoard)) {\n          setUserAccepter(() => ({\n            firstPlayer: false,\n            secondPlayer: false\n          }));\n          socket.emit('game-end', {\n            board: newBoard,\n            roomId: roomIdNum,\n            next: gameData.next,\n            lastTick: [i, j]\n          });\n          setGameData((prev) => ({\n            ...prev,\n            started: false\n          }));\n        } else {\n          socket.emit('room-change', {\n            board: newBoard,\n            roomId: roomIdNum,\n            next: gameData.next,\n            lastTick: [i, j]\n          });\n        }\n      }\n  };\n\n  const handlePressStartGame = () => {\n    const roomIdNum = Number(match.params.id);\n    socket.emit('room-change', {\n      board: new Array(20).fill(new Array(20).fill(null)),\n      roomId: roomIdNum,\n      next: gameData.next\n    });\n    setClockToggle(() => true);\n    setCountdown(() => 10);\n    socket.emit('press-start', { roomId: match.params.id, pos: gameData.pos });\n  };\n\n  let indicator = null; //\n  if (gameData.pos === null) {\n    indicator = (\n      <div className=\"p-2 text-sm text-white bg-red-500 center-absolute\">Pick a position</div>\n    );\n  }\n\n  if (gameData.pos) {\n    if (\n      room?.firstPlayer &&\n      room?.secondPlayer &&\n      !userAccepter.firstPlayer &&\n      !userAccepter.secondPlayer\n    ) {\n      indicator =\n        room?.firstPlayer._id === user._id ? (\n          <button\n            onClick={handlePressStartGame}\n            type=\"button\"\n            className=\"flex flex-col justify-center p-2 text-sm text-white bg-red-500 center-absolute\">\n            {`${winner ? `${winner} win \\n` : ''} `}\n            <span>Start game</span>\n          </button>\n        ) : (\n          <button\n            onClick={handlePressStartGame}\n            type=\"button\"\n            className=\"flex flex-col justify-center p-2 text-sm text-white bg-red-500 center-absolute\">\n            {`${winner ? `${winner} win \\n` : ''} `}\n            <span>Start game</span>\n          </button>\n        );\n    }\n\n    if (\n      (gameData.pos === 1 && userAccepter.firstPlayer) ||\n      (gameData.pos === 2 && userAccepter.secondPlayer)\n    ) {\n      indicator = (\n        <div className=\"p-2 text-sm text-white bg-red-500 center-absolute\">\n          (00:{countdown} (waiting for confirm)\n        </div>\n      );\n    } else if (\n      (!userAccepter.firstPlayer && gameData.pos === 1 && userAccepter.secondPlayer) ||\n      (!userAccepter.secondPlayer && gameData.pos === 2 && userAccepter.firstPlayer)\n    ) {\n      indicator = (\n        <button\n          onClick={handlePressStartGame}\n          type=\"button\"\n          className=\"p-2 text-sm text-white bg-red-500 center-absolute\">\n          Start game (00:{countdown} time lefts)\n        </button>\n      );\n    }\n\n    if (userAccepter.firstPlayer && userAccepter.secondPlayer) {\n      indicator = null;\n    }\n\n    if (gameData.pos === 1) {\n      if (room?.secondPlayer === null) {\n        indicator = (\n          <div className=\"p-2 text-sm text-white bg-red-500 center-absolute\">\n            Waiting for player\n          </div>\n        );\n      }\n    }\n\n    if (gameData.pos === 2) {\n      if (room?.firstPlayer === null) {\n        indicator = (\n          <div className=\"p-2 text-sm text-white bg-red-500 center-absolute\">\n            Waiting for player\n          </div>\n        );\n      }\n    }\n  }\n\n  const handleClaimDraw = () => {\n    socket.emit('claim-draw', { roomId: match.params.id });\n  };\n\n  const handleResign = () => {\n    const roomIdNum = Number(match.params.id);\n    setGameData((prev) => ({\n      ...prev,\n      started: true\n    }));\n    socket.emit('game-end', {\n      board: gameData.board,\n      roomId: roomIdNum,\n      next: gameData.next,\n      lastTick: null,\n      lose: user\n    });\n    setUserAccepter(() => ({\n      firstPlayer: false,\n      secondPlayer: false\n    }));\n  };\n\n  const onSubmitPassword = async ({ password }) => {\n    try {\n      const data = await postCheckPassword(Number(match.params.id), password);\n      setInitStatus((prev) => ({ ...prev, join: true, requirepass: false }));\n      onUserJoinRoom(user);\n    } catch (err) {\n      setError('password', { type: 'manual', message: 'Required.' });\n    }\n  };\n\n  const { handleSubmit, register, errors, setError } = useForm();\n\n  return (\n    <Layout>\n      <Spin spinning={!initStatus.init}>\n        {initStatus.join && room && (\n          <div className=\"flex justify-center max-h-full mt-10\">\n            <div className=\"flex flex-col w-80\">\n              <UserPlay\n                pos={1}\n                started={gameData.started}\n                countdown={countdown}\n                currentUserPos={gameData.pos}\n                user={room?.firstPlayer}\n                canLeave={!userAccepter.firstPlayer}\n                onPickPosition={handleOnUserPickPosition}\n                next={gameData.next}\n              />\n              <div className=\"flex-1 p-4 my-6 bg-gray-100 rounded-lg\">\n                <div className=\"flex flex-row\">\n                  <button\n                    className=\"flex items-center px-3 py-2 font-medium text-white rounded-md bg-main\"\n                    type=\"button\"\n                    onClick={indicator ? null : handleClaimDraw}>\n                    <FaHandshake className=\"mr-2\" /> Claim a draw\n                  </button>\n                  <button\n                    className=\"flex items-center px-3 py-2 ml-4 font-medium text-white rounded-md bg-main\"\n                    type=\"button\"\n                    onClick={handleResign}>\n                    <AiOutlineFlag className=\"mr-2\" /> Resign\n                  </button>\n                </div>\n              </div>\n              <UserPlay\n                pos={2}\n                started={gameData.started}\n                countdown={countdown}\n                currentUserPos={gameData.pos}\n                user={room?.secondPlayer}\n                canLeave={!userAccepter.secondPlayer}\n                onPickPosition={handleOnUserPickPosition}\n                next={gameData.next}\n              />\n            </div>\n\n            <div className=\"flex items-center justify-center flex-shrink-0 px-3 mx-2 rounded-lg bg-board\">\n              <Spin spinning={indicator !== null} indicator={indicator}>\n                <div className=\"play-area\">\n                  <Board\n                    onClick={(i, j) => handleTick(i, j)}\n                    board={gameData.board}\n                    lastTick={gameData.lastTick}\n                  />\n                </div>\n              </Spin>\n            </div>\n\n            <div className=\"flex flex-col w-80\">\n              <div className=\"relative flex-1 w-full\">\n                <div className=\"absolute top-0 bottom-0 left-0 right-0\">\n                  <Chat messages={chat} endRef={messageRef} onMessageSend={handleSendMessage} />\n                </div>\n              </div>\n              <div className=\"flex-1 w-full p-2 mt-6 bg-gray-100 rounded-lg\">\n                <Tabs defaultActiveKey=\"1\" onChange={console.log}>\n                  <TabPane tab=\"Moves\" key=\"1\">\n                    asdasd\n                  </TabPane>\n                  <TabPane tab=\"In Rooms\" key=\"2\">\n                    {room.people.map((p) => (\n                      <li\n                        key={p._id}\n                        className=\"flex items-center justify-between p-2 mb-2 list-none bg-gray-200 rounded-md hover:bg-gray-300\">\n                        <span> {p.email}</span>\n                        <span className=\"font-semibold text-yellow-600 \">{p.point}</span>\n                      </li>\n                    ))}\n                  </TabPane>\n                  <TabPane tab=\"Invite\" key=\"3\">\n                    <div className=\"flex flex-col\">\n                      {onlines &&\n                        onlines\n                          .filter((el) => el._id !== user._id)\n                          .map((invite) => (\n                            <li\n                              key={invite._id}\n                              className=\"flex items-center justify-between p-2 mb-2 list-none bg-gray-200 rounded-md hover:bg-gray-300\">\n                              <span> {invite.email}</span>\n                              <span className=\"font-semibold text-yellow-600 \">{invite.point}</span>\n                            </li>\n                          ))}\n                    </div>\n                  </TabPane>\n                </Tabs>\n              </div>\n            </div>\n            <Modal\n              title=\"Basic Modal\"\n              visible={isModalVisible}\n              onOk={handleOk}\n              onCancel={handleCancel}>\n              <p>Some contents...</p>\n              <p>Some contents...</p>\n              <p>Some contents...</p>\n            </Modal>\n          </div>\n        )}\n\n        {initStatus.requirepass && (\n          <div className=\"flex flex-col items-center justify-center flex-1 w-full h-full\">\n            <span className=\"-mt-5 text-lg font-semibold text-gray-800\">\n              This room requires password.\n            </span>\n            <div className=\"flex mt-3 \">\n              {' '}\n              <form onSubmit={handleSubmit(onSubmitPassword)}>\n                <input\n                  className=\"w-64 px-3 py-2 border rounded-lg focus:outline-none\"\n                  type=\"password\"\n                  name=\"password\"\n                  ref={register({ required: 'Required' })}\n                  placeholder=\"Input password\"\n                />\n                <button\n                  disabled={errors.password}\n                  className=\"h-full px-2 ml-3 font-semibold text-white rounded-lg focus:outline-none bg-main disabled:bg-gray-500\"\n                  type=\"submit\">\n                  Join room\n                </button>\n              </form>\n            </div>\n            {errors.password && <span className=\"font-semibold text-red-600\">Wrong password.</span>}\n          </div>\n        )}\n      </Spin>\n    </Layout>\n  );\n};\n\nexport default Room;\n","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Profile/Profile.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/Auth.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/RegisterForm.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Auth/LoginForm.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/components/Logo.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/hooks/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/services/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/WatchList.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/UserPlay.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Chat.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/services/user.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/services/room.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useLayout.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useDebounce.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/hooks/useLoading.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Board.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/GameButton.js",["257"],"import React from 'react';\n\nimport { GiTicTacToe } from 'react-icons/gi';\nimport { MdLock } from 'react-icons/md';\nimport { FiUser } from 'react-icons/fi';\n// import dayjs from 'utils/dayjs';\n// import { IoPlayForward } from 'react-icons/io5';\nimport clsx from 'clsx';\n\nconst GameButton = ({ onClick, room, hasPassword = true, hasStarted = true }) => {\n  // const [time, setTime] = useState(dayjs(room.createdAt).fromNow());\n\n  // useEffect(() => {\n  //   const interval = setInterval(() => {\n  //     setTime(dayjs(room.createdAt).fromNow());\n  //   }, 15000);\n\n  //   return () => clearInterval(interval);\n  // });\n\n  return (\n    <div className=\"relative duration-300 transform group hover:-translate-y-2 \">\n      <button\n        type=\"button\"\n        onClick={() => onClick(room.roomId)}\n        className=\"flex outline-none tile-structure hover:bg-gray-200 focus:outline-none\">\n        <div className=\"relative w-32 h-32\">\n          <div className=\"text-6xl text-white bg-main box-button\">\n            <GiTicTacToe className={clsx(room.started && 'blink')} />\n          </div>\n          {room.password && hasStarted && <MdLock className=\"text-xl text-white right-icon\" />}\n          {room.firstPlayer && <FiUser className=\"text-xl font-semibold text-white user-icon\" />}\n          {room.secondPlayer && (\n            <FiUser className=\"text-xl font-semibold text-white user-icon right-icon\" />\n          )}\n\n          {/* {hasStarted && <IoPlayForward className=\"text-xl text-white left-icon\" />} */}\n        </div>\n        <span className=\"tile-structure-name\">#{room.roomId}</span>\n      </button>\n    </div>\n  );\n};\n\nexport default GameButton;\n","/Users/shiro/Desktop/monorepo/packages/client/src/pages/Main/components/AddButton.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/Room/components/Square.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/Layout.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/Header.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/Header/UserMenu.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/UpdateProfileModal.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/components/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/layouts/MainLayout/components/User/UpdateProfileModal/components/ ProfileForm.jsx",[],"/Users/shiro/Desktop/monorepo/packages/client/src/slices/errors.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/utils/calculateWin.js",["258","259","260","261","262","263","264","265"],"const calculateWin = async (i, j, value, board) => {\n  let count = 1;\n  let row = i;\n  let column = j;\n\n  // check 1\n  while (true) {\n    if (++column > 19) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  row = i;\n  column = j;\n  while (true) {\n    if (--column < 0) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  count = 1;\n  row = i;\n  column = j;\n\n  // check 2\n  while (true) {\n    if (++row > 14) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  row = i;\n  column = j;\n\n  while (true) {\n    if (--row < 0) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  count = 1;\n  row = i;\n  column = j;\n\n  // check 3\n  while (true) {\n    if (++row > 14) break;\n    if (++column > 19) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  row = i;\n  column = j;\n\n  while (true) {\n    if (--row < 0) break;\n    if (--column < 0) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  count = 1;\n  row = i;\n  column = j;\n\n  // check 4\n  while (true) {\n    if (++row > 14) break;\n    if (--column < 0) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  row = i;\n  column = j;\n\n  while (true) {\n    if (--row < 0) break;\n    if (++column > 19) break;\n    if (board[row][column] !== value) break;\n    count++;\n    if (count === 5) return value;\n  }\n\n  return null;\n};\n\nexport default calculateWin;\n","/Users/shiro/Desktop/monorepo/packages/client/src/pages/ForgotPassword/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/ForgotPassword/ForgotPassword.jsx",["266"],"/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport clsx from 'clsx';\nimport { postForgotPassword, postChangeNewPassword } from 'services/user';\nimport { checkToken } from 'services/token';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ForgotPassword = (props) => {\n  const { register, handleSubmit, errors, setError } = useForm();\n  const [customErrors, setCustomErrors] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [data, setData] = useState({ hasSet: false, isValid: true, hasChangedPassword: false });\n\n  useEffect(() => {\n    const params = new URLSearchParams(props.location.search);\n    setData((prev) => ({\n      ...prev,\n      email: params.get('email'),\n      token: params.get('token'),\n      hasSet: true\n    }));\n  }, [props.location.search]);\n\n  const runRef = useRef(false);\n  useEffect(() => {\n    if (!runRef.current && data.token && data.email) {\n      (async () => {\n        runRef.current = true;\n        try {\n          await checkToken(data.email, data.token);\n        } catch (e) {\n          setData((prev) => ({ ...prev, isValid: false }));\n        }\n      })();\n    }\n  }, [data.token, data.email]);\n\n  const onSubmit = async (values) => {\n    setCustomErrors(() => null);\n\n    try {\n      const data = await postForgotPassword(values.email);\n      setData((prev) => ({ ...prev, values }));\n      setIsSuccess(true);\n    } catch (err) {\n      console.log(err.response);\n      if (err.response.status === 404)\n        setError('email', {\n          type: 'manual',\n          message: `The email ${values.email} was not found in out database.`\n        });\n\n      if (err.response.status === 500) setCustomErrors(`Server error: ${err.response.status}`);\n    }\n  };\n\n  const onChangePassword = async (values) => {\n    setCustomErrors(null);\n    if (values.password !== values.confirmpassword) {\n      setError('confirmpassword', {\n        type: 'manual',\n        message: `Confirm password do not match.`\n      });\n\n      return;\n    }\n\n    try {\n      await postChangeNewPassword(values.password, data.token, data.email);\n      setData((prev) => ({\n        ...prev,\n        hasChangedPassword: true\n      }));\n    } catch (err) {\n      setCustomErrors('Cannot change password due to unknown error.');\n    }\n  };\n  return (\n    data.hasSet && (\n      <div className=\"flex flex-col items-center justify-center h-screen gradient-background\">\n        <Link to=\"/login\">\n          <div className=\"flex items-center mb-6 -mt-12 text-3xl font-medium\">\n            <span className=\"text-xl\">BrosCaro</span>\n          </div>\n        </Link>\n        <div className=\"flex flex-col px-24 py-16 bg-white rounded-md\">\n          {data.hasChangedPassword && (\n            <div className=\"flex flex-col items-center\">\n              <span className=\"mb-4 text-xl text-center text-gray-800\">Password changed.</span>\n\n              <Link to=\"/login\">\n                <span className=\"text-sm font-semibold text-center text-blue-500\">\n                  Back to login\n                </span>\n              </Link>\n            </div>\n          )}\n\n          {!data.hasChangedPassword && (\n            <>\n              {!data.isValid && (\n                <span className=\"mb-3 text-lg text-center text-red-600\">\n                  This token has been expired or it is an invalid token.\n                </span>\n              )}\n              {data.isValid && data.token && data.email ? (\n                <>\n                  <span className=\"text-3xl text-center text-gray-800\">Change Password</span>\n                  <span className=\"mt-2 text-center\">\n                    for <span className=\"font-semibold text-gray-700\">{data.email}</span>\n                  </span>\n\n                  {customErrors && (\n                    <span className=\"py-3 text-xs font-semibold text-center text-red-400\">\n                      {customErrors}\n                    </span>\n                  )}\n                  <form className=\"flex flex-col\" onSubmit={handleSubmit(onChangePassword)}>\n                    <span className=\"py-1 mt-8 text-xs font-semibold text-gray-500\">Password</span>\n                    <input\n                      type=\"password\"\n                      name=\"password\"\n                      className={clsx(\n                        'px-5 py-2 bg-white border border-gray-200 rounded-md w-96 focus:outline-none',\n                        errors.password && 'border-red-500'\n                      )}\n                      ref={register({\n                        required: 'Required',\n                        pattern: {\n                          value: /^.{6,}$/i,\n                          message: 'Password is not valid (minlength 6).'\n                        }\n                      })}\n                    />\n                    {errors.password && (\n                      <span className=\"mt-2 text-xs font-semibold text-red-500\">\n                        {errors.password.message}\n                      </span>\n                    )}\n\n                    <span className=\"py-1 mt-6 text-xs font-semibold text-gray-500\">\n                      Confirm Password\n                    </span>\n                    <input\n                      type=\"password\"\n                      name=\"confirmpassword\"\n                      className={clsx(\n                        'px-5 py-2 bg-white border border-gray-200 rounded-md w-96 focus:outline-none',\n                        errors.confirmpassword && 'border-red-500'\n                      )}\n                      ref={register({\n                        required: 'Required',\n                        pattern: {\n                          value: /^.{6,}$/i,\n                          message: 'Confirm passowrd is not valid (minlength 6).'\n                        }\n                      })}\n                    />\n                    {errors.confirmpassword && (\n                      <span className=\"mt-2 text-xs font-semibold text-red-500\">\n                        {errors.confirmpassword.message}\n                      </span>\n                    )}\n\n                    <button\n                      type=\"submit\"\n                      disabled={errors.password || errors.confirmpassword}\n                      className=\"px-4 py-3 mt-8 text-xs font-semibold text-white bg-blue-400 rounded-md flex-end focus:outline-none disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-400\">\n                      Change Password\n                    </button>\n                  </form>\n                </>\n              ) : !isSuccess ? (\n                <>\n                  <span className=\"text-3xl text-center text-gray-800\">Forgot your password ?</span>\n\n                  {customErrors && (\n                    <span className=\"py-3 text-xs text-center text-red-400\">{customErrors}</span>\n                  )}\n\n                  <span className=\"py-1 mt-8 text-xs font-semibold text-gray-500\">\n                    Email address\n                  </span>\n                  <form className=\"flex flex-col\" onSubmit={handleSubmit(onSubmit)}>\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      className={clsx(\n                        'px-5 py-2 bg-white border border-gray-200 rounded-md w-96 focus:outline-none',\n                        errors.email && 'border-red-500'\n                      )}\n                      ref={register({\n                        required: 'Required',\n                        pattern: {\n                          value: /\\S+@\\S+\\.\\S+/i,\n                          message: 'Email is not valid.'\n                        }\n                      })}\n                    />\n                    {errors.email && (\n                      <span className=\"mt-2 text-xs font-semibold text-red-500\">\n                        {errors.email.message}\n                      </span>\n                    )}\n\n                    <button\n                      type=\"submit\"\n                      disabled={errors.email}\n                      className=\"px-4 py-3 mt-8 text-xs font-semibold text-white bg-blue-400 rounded-md flex-end focus:outline-none disabled:cursor-not-allowed disabled:bg-gray-200 disabled:text-gray-400\">\n                      Send me instructions\n                    </button>\n                  </form>\n                </>\n              ) : (\n                <>\n                  <span className=\"text-3xl text-center text-gray-800\">Instruction Sent</span>\n\n                  <span className=\"mt-6 text-sm text-center text-gray-600\">\n                    Instructions for resetting your password have been sent to{' '}\n                    <span className=\"font-semibold text-gray-800\">{data?.values?.email}</span>.\n                  </span>\n\n                  <span className=\"mt-6 text-sm text-center text-gray-600\">\n                    You’ll receive this email within 5 minutes. Be sure to check your spam folder,\n                    too.\n                  </span>\n\n                  <span className=\"mt-6 text-sm text-center text-gray-600\">\n                    If you do not receive any email, please{' '}\n                    <span\n                      onClick={() => onSubmit(data.values)}\n                      className=\"font-semibold text-blue-600 cursor-pointer\">\n                      click here\n                    </span>{' '}\n                    for new one.\n                  </span>\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default ForgotPassword;\n","/Users/shiro/Desktop/monorepo/packages/client/src/services/token.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/ActiveAccount/index.js",[],"/Users/shiro/Desktop/monorepo/packages/client/src/pages/ActiveAccount/ActiveAccount.jsx",[],{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":14,"column":18,"nodeType":"279","messageId":"280","endLine":14,"endColumn":23},{"ruleId":"277","severity":1,"message":"281","line":20,"column":9,"nodeType":"279","messageId":"280","endLine":20,"endColumn":15},{"ruleId":"277","severity":1,"message":"282","line":53,"column":10,"nodeType":"279","messageId":"280","endLine":53,"endColumn":20},{"ruleId":"277","severity":1,"message":"283","line":53,"column":22,"nodeType":"279","messageId":"280","endLine":53,"endColumn":35},{"ruleId":"277","severity":1,"message":"284","line":606,"column":13,"nodeType":"279","messageId":"280","endLine":606,"endColumn":17},{"ruleId":"277","severity":1,"message":"285","line":10,"column":38,"nodeType":"279","messageId":"280","endLine":10,"endColumn":49},{"ruleId":"286","severity":1,"message":"287","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":16,"column":10,"nodeType":"288","messageId":"289","endLine":16,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":28,"column":10,"nodeType":"288","messageId":"289","endLine":28,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":38,"column":10,"nodeType":"288","messageId":"289","endLine":38,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":50,"column":10,"nodeType":"288","messageId":"289","endLine":50,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":61,"column":10,"nodeType":"288","messageId":"289","endLine":61,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":74,"column":10,"nodeType":"288","messageId":"289","endLine":74,"endColumn":14},{"ruleId":"286","severity":1,"message":"287","line":85,"column":10,"nodeType":"288","messageId":"289","endLine":85,"endColumn":14},{"ruleId":"277","severity":1,"message":"284","line":46,"column":13,"nodeType":"279","messageId":"280","endLine":46,"endColumn":17},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["290"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'Option' is assigned a value but never used.","'currentTab' is assigned a value but never used.","'setCurrentTab' is assigned a value but never used.","'data' is assigned a value but never used.","'hasPassword' is assigned a value but never used.","no-constant-condition","Unexpected constant condition.","Literal","unexpected","padding-line-between-statements"]